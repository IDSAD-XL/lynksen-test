.cylindricalText {
  @apply w-full bg-white flex justify-center items-center text-15;
  font-family: monospace, sans-serif;
  transform-style: preserve-3d;
  transform: rotateX(0deg) rotateZ(0deg) translateZ(-75px);
  &__rows-wrapper {
    @apply absolute mix-blend-difference;
    transform: rotateZ(-30deg);
    &--background {
      @apply mix-blend-normal;
      .cylindricalText__col {
        @apply text-grayPrimary;
      }
    }
    .cylindricalText__row {
      @apply absolute grid;
      grid-template-columns: repeat(60, 1fr);
      &:nth-child(1) {
        top: 0;
      }
      &:nth-child(2) {
        top: 100px;
      }
      &:nth-child(3) {
        top: 200px;
      }
    }
  }
  &__col {
    @apply absolute whitespace-nowrap text-white;
    transform-style: preserve-3d;
    will-change: transform;
    animation-fill-mode: both;
  }
}

$timings: ();

@for $i from 0 through 30 {
  $firstTiming: 26 - 3.5 * $i;
  $secondTiming: 75 - 3.5 * $i;

  @if ($firstTiming < 0) {
    $firstTiming: 100 + $firstTiming;
  }

  @if ($secondTiming < 0) {
    $secondTiming: 100 + $secondTiming;
  }

  $timings: append($timings, ($i, $firstTiming, $secondTiming), comma);
}

@mixin cylindricalTransformStart {
  transform: translate(-50%, -50%) rotateX(10deg) rotateY(calc(var(--cylindrical-text-row-index) * 12deg)) translateZ(200px);
}

@mixin cylindricalTransformEnd {
  transform: translate(-50%, -50%) rotateX(10deg) rotateY(calc(var(--cylindrical-text-row-index) * 12deg + 360deg)) translateZ(200px);
}

@each $timing  in $timings {
  @keyframes animateCylinder-front-#{nth($timing, 1)} {
    @if (nth($timing, 2) > nth($timing, 3)) {
      0% {
        opacity: 0;
        @include cylindricalTransformStart;
      }
      @if (nth($timing, 3) == 0) {
        #{0+'%'} {
          opacity: 0;
        }
      } @else {
        #{nth($timing, 3) - 1 +'%'} {
          opacity: 0;
        }
      }
      #{nth($timing, 3)+'%'} {
        opacity: 1;
      }
      @if (nth($timing, 2) == 0) {
        #{0+'%'} {
          opacity: 1;
        }
      } @else {
        #{nth($timing, 2) - 1 +'%'} {
          opacity: 1;
        }
      }
      #{nth($timing, 2)+'%'} {
        opacity: 0;
      }
      100% {
        opacity: 0;
        @include cylindricalTransformEnd;
      }
    } @else {
      0% {
        opacity: 1;
        @include cylindricalTransformStart;
      }
      @if (nth($timing, 2) == 0) {
        #{0+'%'} {
          opacity: 1;
        }
      } @else {
        #{nth($timing, 2) - 1 +'%'} {
          opacity: 1;
        }
      }
      #{nth($timing, 2)+'%'} {
        opacity: 0;
      }
      @if (nth($timing, 3) == 0) {
        #{0+'%'} {
          opacity: 0;
        }
      } @else {
        #{nth($timing, 3) - 1 +'%'} {
          opacity: 0;
        }
      }
      #{nth($timing, 3)+'%'} {
        opacity: 1;
      }
      100% {
        opacity: 1;
        @include cylindricalTransformEnd;
      }
    }
  }
}

@each $timing  in $timings {
  @keyframes animateCylinder-back-#{nth($timing, 1)} {
    @if (nth($timing, 3) > nth($timing, 2)) {
      0% {
        opacity: 0;
        @include cylindricalTransformStart;
      }
      @if (nth($timing, 2) == 0) {
        #{0+'%'} {
          opacity: 0;
        }
      } @else {
        #{nth($timing, 2) - 1 +'%'} {
          opacity: 0;
        }
      }
      #{nth($timing, 2)+'%'} {
        opacity: 1;
      }
      @if (nth($timing, 3) == 0) {
        #{0+'%'} {
          opacity: 1;
        }
      } @else {
        #{nth($timing, 3) - 1 +'%'} {
          opacity: 1;
        }
      }
      #{nth($timing, 3)+'%'} {
        opacity: 0;
      }
      100% {
        opacity: 0;
        @include cylindricalTransformEnd;
      }
    } @else {
      0% {
        opacity: 1;
        @include cylindricalTransformStart;
      }
      @if (nth($timing, 3) == 0) {
        #{0+'%'} {
          opacity: 1;
        }
      } @else {
        #{nth($timing, 3) - 1 +'%'} {
          opacity: 1;
        }
      }
      #{nth($timing, 3)+'%'} {
        opacity: 0;
      }
      @if (nth($timing, 2) == 0) {
        #{0+'%'} {
          opacity: 0;
        }
      } @else {
        #{nth($timing, 2) - 1 +'%'} {
          opacity: 0;
        }
      }
      #{nth($timing, 2)+'%'} {
        opacity: 1;
      }
      100% {
        opacity: 1;
        @include cylindricalTransformEnd;
      }
    }
  }
}

@for $i from 0 through 30 {
  .cylindricalText__rows-wrapper--frontscene {
    .cylindricalText__col--#{$i} {
      animation: animateCylinder-front-#{$i} 12s linear infinite;
    }
  }
}

@for $i from 0 through 30 {
  .cylindricalText__rows-wrapper--background {
    .cylindricalText__col--#{$i} {
      animation: animateCylinder-back-#{$i} 12s linear infinite;
    }
  }
}